// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  role         UserRole
  reservations Reservation[]
  businesses   Business[]
}

enum UserRole {
  BUSINESS
  EMPLOYEE
  CONSUMER
}

model Reservation {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId Int
  startTime DateTime
  endTime   DateTime
}

// Business model
model Business {
  id           Int            @id @default(autoincrement())
  name         String
  description  String?
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  services     Service[]
  employees    Employee[]
  workingHours WorkingHour[]
  BusinessInfo BusinessInfo[]
}

model BusinessInfo {
  id           Int      @id @default(autoincrement())
  business     Business @relation(fields: [businessId], references: [id])
  businessId   Int
  address      String?
  phoneNumber  String?
  otherDetails String?
  category     String
}

model Service {
  id             Int               @id @default(autoincrement())
  name           String
  price          Float
  status         Boolean           @default(true)
  business       Business          @relation(fields: [businessId], references: [id])
  businessId     Int
  availableHours ServiceHour[]
  employees      EmployeeService[]
  reservations   Reservation[]
}

model Employee {
  id         Int               @id @default(autoincrement())
  name       String
  business   Business          @relation(fields: [businessId], references: [id])
  businessId Int
  services   EmployeeService[]
}

model EmployeeService {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  Int
}

model WorkingHour {
  id         Int      @id @default(autoincrement())
  day        String
  startTime  String
  endTime    String
  business   Business @relation(fields: [businessId], references: [id])
  businessId Int
}

model ServiceHour {
  id        Int     @id @default(autoincrement())
  day       String
  startTime String
  endTime   String
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int
}
